#!/bin/bash

TARPKG=tar-1.23-1

PERMANENT=no
FORCE=no
LIST=no

while [ "${1:0:1}" = "-" ]; do
    [ "$1" = --permanent ] && PERMANENT=yes && shift && continue
    [ "$1" = --force ] && FORCE=yes && shift && continue
    [ "$1" = -l ] && LIST=yes && shift && continue
    [ "$1" = --list ] && LIST=yes && shift && continue
    break
done

pkg=$1
pkgfile=""
STATE=/var/state/installed_files
STATEPKGS=/var/state/installed_pkgs
PERMPKGS=/var/state/permanent_pkgs
PERMFILES=/var/state/permanent_files
MOVEFILES=/var/state/movedfiles.tar
TMPFILE=/tmp/filelist.$$
trap "rm -f $TMPFILE" EXIT

[ "$LIST" = yes ] && (cat $STATEPKGS $PERMPKGS|tr -d ':') 2>/dev/null && exit 0

if [ -z "$pkg" ]; then
   echo "Usage: pkg_install [--permanent] [--force] [-l] <pkg>"
   exit 0
fi

mkdir -p /var/state

if grep -qs ":$pkg:" $PERMPKGS; then
    echo $pkg already permanently installed
    exit 0
fi
if grep -qs ":$pkg:" $STATEPKGS; then
    echo $pkg already installed
    exit 0
fi

[ -f "/var/spool/pkg/$pkg.tar.gz" ] && pkgfile="/var/spool/pkg/$pkg.tar.gz"
[ -f "/var/spool/pkg/$pkg.tgz" ] && pkgfile="/var/spool/pkg/$pkg.tgz"

if [ -z "$pkgfile" ]; then
   echo "$pkg not found in spool"
   exit 1
fi

tar tf "$pkgfile" > $TMPFILE

function movefiles {
    local rc=0
    cd /
    while read f; do
	if [ -d "$f" ]; then
	    continue
	fi
	if [ -e "$f" ]; then
	    if [ -f $MOVEFILES ]; then
		tar tf $MOVEFILES "$f" && continue
	    fi
	    if ! grep -qs ":$TARPKG:" $PERMPKGS; then
		echo "Trying to install $TARPKG for backup functionality."
		if ! /var/lib/build/pkg_install --permanent $TARPKG; then
		    echo "I need pkg $TARPKG permanently installed to be able to backup files!"
		    return 1
		fi
	    fi
	    if ! tar rf $MOVEFILES "$f"; then
		echo "Failed to take backup of $f"
		rc=1
	    fi
	fi
    done
    return $rc
}

echo -n "Installing $pkg: ."

if [ "$PERMANENT" = no ]; then
    movefiles < $TMPFILE
    [ $? = 0 ] || exit 1
fi

if [ "$PERMANENT" = no ]; then
    cat $TMPFILE >> $STATE
else
    cat $TMPFILE >> $PERMFILES
fi

[ -f /sbin/remount ] && remount w
cd /
tar xUf "$pkgfile" #--checkpoint=500 --checkpoint-action="dot"
echo " Done!"
[ -f /sbin/remount ] && remount r
if [ "$PERMANENT" = no ]; then
    echo ":$pkg:" >> $STATEPKGS
else
    echo ":$pkg:" >> $PERMPKGS
fi
