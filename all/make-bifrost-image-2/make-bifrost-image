#!/bin/bash

# Main purpose is creating a bootable diskimage for the Bifrost distribution.
#
# Keywords: Linux Distribution Grub2 Diskimage Bootable
#
# Jens Laas (UU),  2012-2013

IMAGEFS=/tmp/imagefs
IMG=$IMAGEFS/bifrost.img
MP=/tmp/bifrost.img
GRUBPKG=/grub-2.00-2.tar.gz 
HDDEV=hdx

if [ -z "$1" ]; then
	echo "Usage: $0 <distribution tarball>"
	echo
	echo "Creates a 1GB diskimage in $IMAGEFS."
	echo "Partitions this image and puts the distribution tarball contents into the first partition."
	echo "Installs grub2 and makes the image bootable."
	echo
	echo "The distribution should be useable as chroot where grub-mkconfig will run."
	echo
	echo "The tarballs must be made to be unpacked from the root '/' of the filesystem."
	echo 
	echo "The grub package can be built from the bifrost-build environment."
	echo "See: https://github.com/jelaas/bifrost-build"
	echo "     https://github.com/jelaas/bifrost-build/tree/master/all/grub-2.00-2"
	echo "You might find a binary at: http://ftp.sunet.se/pub/os/Linux/distributions/bifrost/download/"
	echo
	echo "Kernel: Functionality of \"loop\" and \"dm-mod\" must be present in kernel or as module."
	echo "NOTE: a tarball with grub2 must be available at $GRUBPKG if grub2 is not present in the distribution tarball."
	echo
	exit 0
fi
TARBALL="$1"

if [ ! -f "$GRUBPKG" ]; then
	echo "Warning! Could not find grub2 package at \'$GRUBPKG\'"
fi
if [ ! -f "$TARBALL" ]; then
	echo "Could not find \'$TARBALL\'"
	exit 1
fi

rc=0
for E in sfdisk dd modprobe losetup dmsetup kpartx; do
	[ -e /sbin/$E ] && continue
	[ -e /usr/sbin/$E ] && continue
	[ -e /bin/$E ] && continue
	[ -e /usr/bin/$E ] && continue
	echo "Please install $E"
	rc=1
done
[ "$rc" = 1 ] && exit 1

mkdir -p $IMAGEFS
mkdir -p $MP
umount $IMAGEFS &> /dev/null
mount -n -t tmpfs -o size=2048m tmpfs $IMAGEFS || exit 1

modprobe loop
modprobe dm-mod

umount $MP/dev  &> /dev/null
umount $MP  &> /dev/null
dmsetup remove $HDDEV &> /dev/null
dmsetup remove ${HDDEV}1 &> /dev/null
losetup -d /dev/loop0 &> /dev/null
losetup -d /dev/loop1 &> /dev/null
rm -f /dev/$HDDEV
rm -f /dev/${HDDEV}1

[ "$2" ] && exit 0

echo CREATING EMPTY DISKIMAGE
echo dd if=/dev/zero of=$IMG bs=100M count=10
[ -f "$IMG" ] || dd if=/dev/zero of=$IMG bs=100M count=10

echo CREATING LOOPDEVICE OF DISKIMAGE
LOOPDEV=$(losetup --show -f $IMG)

echo CREATING DISKIMAGE BLOCKDEVICE
DEVNO=$(stat -c %t:%T $LOOPDEV)
BYTES=$(stat -c %s $IMG)
BLOCKS=$[ BYTES / 512 ]
echo "0 $BLOCKS linear $DEVNO 0 | dmsetup create $HDDEV"
echo "0 $BLOCKS linear $DEVNO 0" | dmsetup create $HDDEV
HDA=$(stat -L -c "0x%t 0x%T" /dev/mapper/$HDDEV)
mknod /dev/$HDDEV b $HDA

echo FORMATTING DISK
sfdisk --cylinders 977 --heads 64 --sectors 32 $IMG << EOF
10 967 L *
,0
,0
,0
y
EOF

echo CREATING PARTITION BLOCKDEVICE
[ -e /dev/$HDDEV ] || exit 1
START=$(partx -g /dev/$HDDEV -o START)
SECTORS=$(partx -g /dev/$HDDEV -o SECTORS)
echo "0 $SECTORS linear /dev/$HDDEV $START | dmsetup create ${HDDEV}1"
echo "0 $SECTORS linear /dev/$HDDEV $START" | dmsetup create ${HDDEV}1
sleep 1
HDAP=$(stat -L -c "0x%t 0x%T" /dev/mapper/${HDDEV}1)
mknod /dev/${HDDEV}1 b $HDAP

echo CREATING FILESYSTEM
mkfs.ext2 -m0 /dev/mapper/${HDDEV}1 || exit 1

echo SETTING FILESYSTEM LABEL
e2label /dev/mapper/${HDDEV}1 bifrost

echo MOUNTING FILESYSTEM
mkdir -p $MP
mount /dev/mapper/${HDDEV}1 $MP || exit 1

echo UNPACKING DISTRO
cd $MP
if ! tar xf $TARBALL; then
    echo "WARNING: fail to unpack the distribution tarball"
    sleep 20
fi
echo UNPACKING DONE. LISTING SOME FILES
ls -l|head -n 10
sleep 5

if [ ! -f sbin/grub-mkconfig ]; then
	echo INSTALLING GRUB2
	if [ ! -f "$GRUBPKG" ]; then
		echo "Please put grub2 package at  \'GRUBPKG\'"
	else
		tar xf $GRUBPKG
	fi
fi
mkdir -p $MP/boot/grub
echo CREATING DEVICEMAP
echo "(hd0) /dev/$HDDEV" > $MP/boot/grub/device.map
echo "(hd0,msdos1) /dev/${HDDEV}1" >> $MP/boot/grub/device.map

echo MOUNTING DEV
mount -t devtmpfs devtmpfs $MP/dev || exit 1

echo INSTALLING GRUB
mkdir -p $MP/boot/grub/i386-pc
cp -f /lib/grub/i386-pc/* $MP/boot/grub/i386-pc
# To add support for other filesystems or partition-tables, the modules needs to be included in core.img
grub-mkimage -d /lib/grub/i386-pc -O i386-pc --output=$MP/boot/grub/i386-pc/core.img --prefix=/boot/grub \
 biosdisk ext2 part_msdos || exit 1
grub-bios-setup --verbose --directory=/boot/grub/i386-pc --device-map=/boot/grub/device.map /dev/$HDDEV

echo "CONFIGURING GRUB (running grub-mkconfig in chroot)"
echo chroot $MP bash -c "grub-mkconfig > /boot/grub/grub.cfg"
chroot $MP bash -c "grub-mkconfig > /boot/grub/grub.cfg"
sed -i "s,root=/dev/${HDDEV}1,," $MP/boot/grub/grub.cfg

echo UNMOUNTING FILESYSTEM
cd /
umount $MP/dev
umount $MP

echo REMOVING PARTITION BLOCKDEVICE
dmsetup remove ${HDDEV}1

echo REMOVING DISKIMAGE BLOCKDEVICE
dmsetup remove $HDDEV

echo REMOVING LOOPDEVICE
losetup -d $LOOPDEV

echo IMAGE READY:
ls -l $IMG
echo "RUN: \"dd if=$IMG of=/dev/sdX\" to install on disk X"
echo "RUN: \"qemu-img convert -O vmdk $IMG bifrost.vmdk\" to convert to virtual disk"
